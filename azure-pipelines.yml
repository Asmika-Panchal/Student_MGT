trigger:
- main

pool:
  name: Default

steps:
# Step 1: Checkout code from GitHub
- checkout: self
  displayName: 'Checkout code from GitHub'

# Step 2: Clean up any existing Django container
- task: CmdLine@2
  displayName: 'Clean up existing Django container (if any)'
  inputs:
    script: |
      docker rm -f django-student-container || echo "No existing container to remove"

# Step 3: Free up port 8081 if another process is using it
- task: CmdLine@2
  displayName: 'Free up port 8081 (if in use)'
  inputs:
    script: |
      for /f "tokens=5" %%a in ('netstat -aon ^| findstr :8081 ^| findstr LISTENING') do taskkill /F /PID %%a

# Step 4: Build Docker image for Django (from dockerfile directory)
- task: CmdLine@2
  displayName: 'Build Docker image for Django'
  inputs:
    script: |
      cd C:\Users\asmika\DevopsPract\Student_MGT\dockerfile
      docker build -t django-student .

# Step 5: Run Docker container
- task: CmdLine@2
  displayName: 'Run Docker container now'
  inputs:
    script: docker run -d -p 8081:8000 --name django-student-container django-student

# Step 6: List running Docker containers
- task: CmdLine@2
  displayName: 'List running Docker containers'
  inputs:
    script: docker ps
  condition: always()

# Step 7: Wait for the Django application to be ready
- task: CmdLine@2
  displayName: 'Check if Django application is ready'
  inputs:
    script: |
      echo Waiting for the Django application to be ready...
      for /l %%i in (1,1,10) do (
        curl -s -o nul -w "%%{http_code}" http://localhost:8081/admin
        if %%errorlevel%% equ 0 (
          echo Server is up!
          exit /b 0
        )
        echo Retrying in 5 seconds...
        timeout /t 5 >nul
      )
      echo Failed to connect to the server.
      exit /b 1

# Step 8: Test the Django app with POST request
- task: CmdLine@2
  displayName: 'Test Django application'
  inputs:
    script: |
      curl -X POST http://localhost:8081/api/students/ ^
        -H "Content-Type: application/json" ^
        -d "{\"name\": \"Test Student\", \"age\": 21, \"course\": \"Computer Science\"}"

# Step 9: Stop and remove the Docker container
- task: CmdLine@2
  displayName: 'Stop and remove Django container'
  inputs:
    script: docker stop django-student-container && docker rm django-student-container
  condition: always()
